#Generator function to return fibonacci numbers till the limit is reached
def fibo(limit):
    a = 0
    b = 1

    while True:
        try:
            if a <= limit:
                a, b = b, a + b
                yield a
            else:
                raise StopIteration
        except StopIteration:
            break


#Nested Generators to print every quarter of the years list
def quartersyears(yearlist):
    years = iter(yearlist)
    while True:
        try:
            y = next(years)
            quarters = iter(['q1', 'q2', 'q3', 'q4'])
            while True:
                try:
                    q = next(quarters)
                    yield str(y)+' '+q
                except StopIteration:
                    break
        except StopIteration:
            break


if __name__ == '__main__':
    
    f = fibo(10)
    print(f)
    for i in f:
        print("From Generator Function:",i)
    
    #Generator Expression for n square
    genexp = (a**2 for a in range(10))
    print(genexp)
    for i in genexp:
        print("From Generator Expression",i)
    
    f1 = quartersyears([2017,2018,2019])
    for i in f1:
        print("From Nested Generators:",i)
